                                       Проект интернет магазина электронных товаров
1. Написать бэк.
    1.1 Выделить сущности проекта (моделей в архитектуре MVC);
    1.2 Нарисовать диаграмму для БД, подумать, как сущности будут связаны, определить ключи и типы данных для полей.
    1.3 Подключить СУБД (PostgreSQL или MySQL) (вспомнить основные моменты, если новая - подучить);
    1.4 Настроить гит, вспомнить основные, дополнить необходимые знания;
    1.5 Подумать над методами для сущностей (моделей), написать код для них;
    1.6 Юнит тесты для методов моделей;
    1.7 Написать код контроллеров (использование JSON API);
    1.8 Юнит тесты для методов контроллеров;
    1.9 Интеграционное тестирование взаимодествия моделей и контроллеров;
    1.10 Продумать и написать код, осуществляющий маршрутизацию;
    1.11 Юнит тесты для маршрутизации;
    1.12 Инетграционное тестирование взаимодействия маршрутизации с другими компонентами;
    1.13 Написать код для представлений;
    1.14 Юнит тесты для представлений;
    1.15 Интеграционное тестирование взаимодействия представлений с другими компонентками;
    1.11 Функциональное тестирование;

    -------------- следующие пункты идут после хотя бы элементарного фронта (см. п. 2) ---------------

    1.9 Рефакторинг кода, применение паттернов (опционально, ближе к собесу);
    1.10 Переписывание с использованием Laravel (опционально, в дальнейшем);
    1.11 Использование Docker для контейнеризации (опционально, для улучшения резюме в дальнейшем);

2. Написать фронт
    2.1 Получить необходимые знания по html, css;
    2.2 Подучить JS до нужного уровня, далее по ситуации (в плане знаний и фреймворков?);

======================================================================================================

1.1 Сущности

    - User
        1. id
        2. name
        3. email
        4. password
        5. phone_num
        6. is_confirmed

    - Item
        1. id
        2. name
        3. category_id
        4. price
        5. description
        6. brand

    - Order_item
        1. id
        2. item_id
        3. order_id
        4. quantity
        5. price

    - Category
        1. id
        2. name
        3. description

    - Order
        1. id
        2. user_id
        3. date
        4. total_sum
        5. status

    - Cart
        1. id
        2. user_id
        3. item_id
        4. quantity
        5. total_sum

1.5 Реализация сущностей;

1. User

    - регистрация на сайте (проверка email, валидация почты);
    - залогинивание на сайте (валидация пароля);
    - осуществление покупки;
    - *редактирование данных;
    - *доставка;
    - *профиль;
    - *Register Exception (для User Controller?);

  2. Item

    - CRUD:
        a. добавление нового товара;
        b. получение информации о товаре;
        c. редактирование данных товара;
        d. удаление товара;

  3. Order

    - CRUD:
        a. создание нового заказа;
        b. получение информации о заказе;
        c. редактирование данных заказа;
        d. удаление заказа;

  4. Order_item

    - CRUD:
         a. создание новой позиции в чеке;
         b. получение информации о товаре в чеке;
         c. редактирование данных тоавара в чеке;
         d. удаление товара из чека;

  5. Cart

    - добавление товара в корзину;
    - удаление товара из корзины;
    - отображение имеющихся товаров в коризе;
    - очистка корзины;
    - показ полной суммы корзины;

  6. Category

    - CRUD:
        a. добавление новой категории;
        b. получение всех товаров в категории;
        c. редактирование данных в категории (добавление/удаление товара);
        d. удаление категории;

-----------------------------------

1.1 Разобраться также с остальными сущностями, прописать в тетради все маршруты (read на show поменять)

1. Разобраться с методами для OrderItem;
2. Исправить контроллеры для Cart и OrderItem в сооствествии с исправлениями моделей;

*1. Подумать над тем, чтобы методы сделать статическими, где можно (Получение всех сущностей итд, чтобы в методах
    можно было передавать в параметр id везде напирмер везде, а не обращаться к экземпляру сущности,
    и не надо проверять (if($this->id)) в некоторых методах еще);
*2. Подумать над тем, что передается в констукторе для каждой из сущностей;
*3. Подумать над применением ООП (создать новый метод для похожих сущностей (item, user итд), чтобы общие методы
    типа index можно было реализовать в классе - родителе, а в наследниках просто переопределить
     (например, чтобы в метод передавался класс наследника и по нему делался запрос к БД).
     Актуально как для моделей, так и для контроллеров.
 *4. Рассмотреть такой вариант для Order (GET /orders/{id}/items) то есть вывод также и информации о всех твоарах
    в конкретном заказе, помимо имеющегося метода.
 *4.1 Такой же вариант для Category (есть метод общий инфы, а в новом, чтобы выводились товары в категории)
    GET /category/{id}/items

